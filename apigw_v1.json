{
    "openapi" : "3.0.1",
    "info" : {
      "title" : "api",
      "description" : "<br/>https://apigateway.apigw.ntruss.com/api/v1",
      "version" : "2023-11-23T12:50:30Z"
    },
    "servers" : [ {
      "url" : "https://apigateway.apigw.ntruss.com/api/v1"
    } ],
    "paths" : {
      "/" : { },
      "/api-keys" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "apiKeyName",
            "in" : "query",
            "description" : "Api Key Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiKeysResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/api-keys",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostApiKeyRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiKeyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/api-keys",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/api-keys/search" : {
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchApiKeysWithProductRelationRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchApiKeysWithProductRelationResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/api-keys/search",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/api-keys/{api-key-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiKeyDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/api-keys/{api-key-id}",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutApiKeyRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiKeyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/api-keys/{api-key-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/api-keys/{api-key-id}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchApiKeyRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiKeyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/api-keys/{api-key-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/api-keys/{api-key-id}/products" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiKeyRelateProductResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/api-keys/{api-key-id}/products",
              "stream" : false
            }
          }
        }
      },
      "/api-keys/{api-key-id}/subscribe" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostSubscriptionRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/api-keys/{api-key-id}/subscribe",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/api-keys/{api-key-id}/subscription-detail" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiId",
            "in" : "query",
            "description" : "Api Id<br>Length(Min/Max): 0/10",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "productId",
            "in" : "query",
            "description" : "Product Id<br>Length(Min/Max): 0/10",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "stageId",
            "in" : "query",
            "description" : "Stage Id<br>Length(Min/Max): 0/10",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchApiKeyRelationsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/api-keys/{api-key-id}/subscription-detail",
              "stream" : false
            }
          }
        }
      },
      "/api-keys/{api-key-id}/unsubscribe" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostUnSubscribeRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/api-keys/{api-key-id}/unsubscribe",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/authorizers" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "name",
            "in" : "query",
            "description" : "Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetAuthorizersResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/authorizers",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizerRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/AuthorizerDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/authorizers",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/authorizers/{authorizer-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "authorizer-id",
            "in" : "path",
            "description" : "authorizer-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/AuthorizerDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/authorizers/{authorizer-id}",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "authorizer-id",
            "in" : "path",
            "description" : "authorizer-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizerRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/authorizers/{authorizer-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "authorizer-id",
            "in" : "path",
            "description" : "authorizer-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/authorizers/{authorizer-id}",
              "stream" : false
            }
          }
        }
      },
      "/authorizers/{authorizer-id}/test" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "authorizer-id",
            "in" : "path",
            "description" : "authorizer-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TestAuthorizerRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/AuthorizerTestResponseDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/authorizers/{authorizer-id}/test",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/dashboards" : { },
      "/dashboards/api-keys" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiKeyIdsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/api-keys",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/api-keys/{api-key-id}" : { },
      "/dashboards/api-keys/{api-key-id}/product-ids" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetProductIdsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/api-keys/{api-key-id}/product-ids",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/api-keys/{api-key-id}/products" : { },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}" : { },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/api-ids" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiIdsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/api-keys/{api-key-id}/products/{product-id}/api-ids",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/apis" : { },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/apis/{api-id}" : { },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/apis/{api-id}/stages" : { },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/apis/{api-id}/stages/{stage-id}" : { },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/apis/{api-id}/stages/{stage-id}/export" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/octet-stream" : {
                  "schema" : {
                    "type" : "string"
                  }
                },
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/api-keys/{api-key-id}/products/{product-id}/apis/{api-id}/stages/{stage-id}/export",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/api-keys/{api-key-id}/products/{product-id}/charts" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiId",
            "in" : "query",
            "description" : "Api Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiStagesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/api-keys/{api-key-id}/products/{product-id}/charts",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/events" : { },
      "/dashboards/events/search" : {
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventHistoryRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/EventResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/dashboards/events/search",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/dashboards/products" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetProductIdsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/products",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/products/{product-id}" : { },
      "/dashboards/products/{product-id}/api-ids" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiId",
            "in" : "query",
            "description" : "Api Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiIdsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/products/{product-id}/api-ids",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/products/{product-id}/apis" : { },
      "/dashboards/products/{product-id}/apis/{api-id}" : { },
      "/dashboards/products/{product-id}/apis/{api-id}/stages" : { },
      "/dashboards/products/{product-id}/apis/{api-id}/stages/{stage-id}" : { },
      "/dashboards/products/{product-id}/apis/{api-id}/stages/{stage-id}/export" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/octet-stream" : {
                  "schema" : {
                    "type" : "string"
                  }
                },
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/products/{product-id}/apis/{api-id}/stages/{stage-id}/export",
              "stream" : false
            }
          }
        }
      },
      "/dashboards/products/{product-id}/charts" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiId",
            "in" : "query",
            "description" : "Api Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "From<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "regions",
            "in" : "query",
            "description" : "Regions<br>collection item cannot be null",
            "style" : "form",
            "explode" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "timeZone",
            "in" : "query",
            "description" : "Time Zone<br>Pattern: +09:00",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "To<br>Pattern: yyyy-MM-dd",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiStagesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/dashboards/products/{product-id}/charts",
              "stream" : false
            }
          }
        }
      },
      "/products" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "hasDeployedStage",
            "in" : "query",
            "description" : "Has Deployed Stage",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "hasStageNotAssociatedWithUsagePlanId",
            "in" : "query",
            "description" : "Has Stage Not Associated With Usage Plan Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "isPublished",
            "in" : "query",
            "description" : "Is Published",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "productName",
            "in" : "query",
            "description" : "Product Name<br>Length(Min/Max): 0/100",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "subscriptionCode",
            "in" : "query",
            "description" : "Subscription Code<br>Allowable values: PROTECTED, PUBLIC",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetProductsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostProductRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/PostProductResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/PostProductResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}",
              "stream" : false
            }
          }
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchProductRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/api-keys" : { },
      "/products/{product-id}/api-keys/search" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchApiKeysRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchApiKeysResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/api-keys/search",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/api-keys/{api-key-id}" : {
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchSubscriptionRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/api-keys/{api-key-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/api-keys/{api-key-id}/stages" : { },
      "/products/{product-id}/api-keys/{api-key-id}/stages/{stage-id}" : {
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-key-id",
            "in" : "path",
            "description" : "api-key-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutApiKeyRelationRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/products/{product-id}/api-keys/{api-key-id}/stages/{stage-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiName",
            "in" : "query",
            "description" : "Api Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "hasStage",
            "in" : "query",
            "description" : "Has Stage",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "hasStageNotAssociatedWithUsagePlanId",
            "in" : "query",
            "description" : "Has Stage Not Associated With Usage Plan Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "withStage",
            "in" : "query",
            "description" : "With Stage",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostApiRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/clone" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostCloneApiRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/clone",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/filter" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/filter",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/import" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostImportApiRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ImportApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/import",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/infos" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiName",
            "in" : "query",
            "description" : "Api Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "hasStage",
            "in" : "query",
            "description" : "Has Stage",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "hasStageNotAssociatedWithUsagePlanId",
            "in" : "query",
            "description" : "Has Stage Not Associated With Usage Plan Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "withStage",
            "in" : "query",
            "description" : "With Stage",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/infos",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}",
              "stream" : false
            }
          }
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchApiRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/deploy" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDeployApiRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "stream" : true,
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/deploy"
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/documents" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/DocumentDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/documents",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDocumentRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/documents",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/models" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "modelName",
            "in" : "query",
            "description" : "Model Name<br>Length(Min/Max): 0/100",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetModelsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/models",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostModelRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ModelDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/models",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/models/preview" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreviewModelRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ModelPreviewResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/models/preview",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/models/{model-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "model-id",
            "in" : "path",
            "description" : "model-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ModelDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/models/{model-id}",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "model-id",
            "in" : "path",
            "description" : "model-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutModelRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ModelDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/models/{model-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "model-id",
            "in" : "path",
            "description" : "model-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/models/{model-id}",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/publish" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostPublishApiRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/publish",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetResourcesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostResourceRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ResourceResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/import" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostImportResourcesRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ImportResourceResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "stream" : true,
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/import"
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}" : {
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchResourceRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ResourceResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetMethodsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostMethodRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/AddMethodResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}" : {
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchMethodRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/consumers" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ConsumersResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/consumers",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutConsumersRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ConsumersResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/consumers",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/parameters" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetRequestParameterListResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/parameters",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostMethodParameterRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodParameterResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/parameters",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/parameters/delete" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteMethodParameterRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/parameters/delete",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/produces" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ProducesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/produces",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutProducesRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ProducesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/produces",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/request-body" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodBodyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/request-body",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MethodBodyRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodBodyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/request-body",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/request-body",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetMethodResponses"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostMethodResponseRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodResponseResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}" : {
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchMethodResponseRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodResponseResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/parameters" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetResponseHeaderListResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/parameters",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostResponseHeaderRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodParameterResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/parameters",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/parameters/{parameter-name}" : {
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "parameter-name",
            "in" : "path",
            "description" : "parameter-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/parameters/{parameter-name}",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/response-body" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodBodyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/response-body",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MethodBodyRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/MethodBodyResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/response-body",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "status-code",
            "in" : "path",
            "description" : "status-code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/resources/{resource-id}/methods/{method-name}/responses/{status-code}/response-body",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/responses" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetGatewayResponsesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/responses/{response-type}" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SetStatusCodeRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GatewayResponseDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/responses/{response-type}/headers" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostGatewayResponseHeaderRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GatewayResponseHeaderDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}/headers",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/responses/{response-type}/headers/{header-name}" : {
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "header-name",
            "in" : "path",
            "description" : "header-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}/headers/{header-name}",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/responses/{response-type}/templates" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostGatewayResponseTemplateRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GatewayResponseTemplateDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}/templates",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "contentType",
            "in" : "query",
            "description" : "Content Type<br>Length(Min/Max): 0/100<br>Pattern: [.a-z0-9_+/\\-*]+",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}/templates",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "response-type",
            "in" : "path",
            "description" : "response-type",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostGatewayResponseTemplateRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/responses/{response-type}/templates",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetStagesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostStageRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/filter" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetStagesResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/filter",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/search" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchDisassociatedStageRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetStageSimpleResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/search",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutStageRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/associate-usage-plan" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StageAssociateRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/associate-usage-plan",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/cache-initialize" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/cache-initialize",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/CanaryTestDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary",
              "stream" : false
            }
          }
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchCanaryTestRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/CanaryTestDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary/export" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "artifactId",
            "in" : "query",
            "description" : "Artifact Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "artifactVersion",
            "in" : "query",
            "description" : "Artifact Version",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "groupId",
            "in" : "query",
            "description" : "Group Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "license",
            "in" : "query",
            "description" : "License",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "packageName",
            "in" : "query",
            "description" : "Package Name",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "platform",
            "in" : "query",
            "description" : "Platform<br>Allowable values: SWAGGER_JSON, JAVA_SDK<br>Default value: SWAGGER_JSON",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "version",
            "in" : "query",
            "description" : "Version",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary/export",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary/promote" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary/promote",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary/swagger-json" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetDocumentResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/canary/swagger-json",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deploy" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDeployStageRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deploy",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetStageDeploymentResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "deployment-no",
            "in" : "path",
            "description" : "deployment-no",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetDocumentResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}",
              "stream" : false
            }
          }
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "deployment-no",
            "in" : "path",
            "description" : "deployment-no",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources" : { },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources/{resource-id}" : { },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources/{resource-id}/methods" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "deployment-no",
            "in" : "path",
            "description" : "deployment-no",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageMethodsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources/{resource-id}/methods",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources/{resource-id}/methods/{method-name}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "deployment-no",
            "in" : "path",
            "description" : "deployment-no",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageMethodResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources/{resource-id}/methods/{method-name}",
              "stream" : false
            }
          }
        },
        "patch" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "deployment-no",
            "in" : "path",
            "description" : "deployment-no",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "resource-id",
            "in" : "path",
            "description" : "resource-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "method-name",
            "in" : "path",
            "description" : "method-name",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatchStageMethodRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageMethodResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PATCH",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/deployments/{deployment-no}/resources/{resource-id}/methods/{method-name}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/disassociate-usage-plan" : {
        "post" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StageAssociateRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/disassociate-usage-plan",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/export" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "artifactId",
            "in" : "query",
            "description" : "Artifact Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "artifactVersion",
            "in" : "query",
            "description" : "Artifact Version",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "groupId",
            "in" : "query",
            "description" : "Group Id",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "license",
            "in" : "query",
            "description" : "License",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "packageName",
            "in" : "query",
            "description" : "Package Name",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "platform",
            "in" : "query",
            "description" : "Platform<br>Allowable values: SWAGGER_JSON, JAVA_SDK<br>Default value: SWAGGER_JSON",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "version",
            "in" : "query",
            "description" : "Version",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/export",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/swagger-json" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetDocumentResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/swagger-json",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/usage-plan" : {
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutStageUsageSettingRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/usage-plan",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/products/{product-id}/apis/{api-id}/stages/{stage-id}/usage-plans" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "stage-id",
            "in" : "path",
            "description" : "stage-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "usagePlanName",
            "in" : "query",
            "description" : "Usage Plan Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetUsagePlansOfStageResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/apis/{api-id}/stages/{stage-id}/usage-plans",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/document" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiName",
            "in" : "query",
            "description" : "Api Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchProductDocumentResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/document",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/overview" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetProductOverviewResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/overview",
              "stream" : false
            }
          }
        }
      },
      "/products/{product-id}/subscription-detail" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiId",
            "in" : "query",
            "description" : "Api Id<br>Length(Min/Max): 0/10",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "apiKeyId",
            "in" : "query",
            "description" : "Api Key Id<br>Length(Min/Max): 0/10",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "stageId",
            "in" : "query",
            "description" : "Stage Id<br>Length(Min/Max): 0/10",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchApiKeyRelationsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/products/{product-id}/subscription-detail",
              "stream" : false
            }
          }
        }
      },
      "/published-products" : { },
      "/published-products/search" : {
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchProductsRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchProductsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/published-products/search",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/published-products/{product-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/PostProductResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/published-products/{product-id}",
              "stream" : false
            }
          }
        }
      },
      "/published-products/{product-id}/apis" : { },
      "/published-products/{product-id}/apis/{api-id}" : { },
      "/published-products/{product-id}/apis/{api-id}/documents" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "api-id",
            "in" : "path",
            "description" : "api-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/DocumentDto"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/published-products/{product-id}/apis/{api-id}/documents",
              "stream" : false
            }
          }
        }
      },
      "/published-products/{product-id}/documents" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "product-id",
            "in" : "path",
            "description" : "product-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "apiName",
            "in" : "query",
            "description" : "Api Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SearchProductDocumentResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/published-products/{product-id}/documents",
              "stream" : false
            }
          }
        }
      },
      "/usage-plans" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "associated",
            "in" : "query",
            "description" : "Associated",
            "schema" : {
              "type" : "boolean",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "stageId",
            "in" : "query",
            "description" : "Stage Id<br>Length(Min/Max): 0/10",
            "required" : true,
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetUsagePlansResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/usage-plans",
              "stream" : false
            }
          }
        },
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostUsagePlanRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "201" : {
              "description" : "Created",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/UsagePlanResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/usage-plans",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/usage-plans/search" : {
        "post" : {
          "tags" : [ "v1" ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchUsagePlanDetailRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetUsagePlanDetailsResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "POST",
              "url" : "/apigw/v1/usage-plans/search",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        }
      },
      "/usage-plans/{usage-plan-id}" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "usage-plan-id",
            "in" : "path",
            "description" : "usage-plan-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/UsagePlanResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/usage-plans/{usage-plan-id}",
              "stream" : false
            }
          }
        },
        "put" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "usage-plan-id",
            "in" : "path",
            "description" : "usage-plan-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "requestBody" : {
            "description" : "Request",
            "content" : {
              "application/json;charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PutUsagePlanRequest"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/UsagePlanResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "PUT",
              "url" : "/apigw/v1/usage-plans/{usage-plan-id}",
              "stream" : false
            }
          },
          "x-codegen-request-body-name" : "request"
        },
        "delete" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "usage-plan-id",
            "in" : "path",
            "description" : "usage-plan-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "204" : {
              "description" : "No Content",
              "content" : { }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "DELETE",
              "url" : "/apigw/v1/usage-plans/{usage-plan-id}",
              "stream" : false
            }
          }
        }
      },
      "/usage-plans/{usage-plan-id}/stages" : {
        "get" : {
          "tags" : [ "v1" ],
          "parameters" : [ {
            "name" : "usage-plan-id",
            "in" : "path",
            "description" : "usage-plan-id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "limit",
            "in" : "query",
            "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "name",
            "in" : "query",
            "description" : "Name<br>Length(Min/Max): 0/20",
            "schema" : {
              "type" : "string",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          }, {
            "name" : "offset",
            "in" : "query",
            "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "x-ncp-parameter-is-logged" : false
            },
            "x-ncp-parameter-is-logged" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "OK",
              "content" : {
                "application/json;charset=UTF-8" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GetStagesOfUsagePlanResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "x-ncp-iam" : [ ]
          } ],
          "x-ncp-apigw-use-body-when-formdata" : false,
          "x-ncp-apigateway-filters" : {
            "valid" : {
              "type" : "NONE"
            },
            "apiKey" : {
              "required" : false
            },
            "auth" : {
              "platform" : "IAM"
            }
          },
          "x-ncp-apigateway-endpoint" : {
            "HTTP" : {
              "method" : "GET",
              "url" : "/apigw/v1/usage-plans/{usage-plan-id}/stages",
              "stream" : false
            }
          }
        }
      }
    },
    "components" : {
      "schemas" : {
        "StageAssociateRequest" : {
          "required" : [ "usagePlanId" ],
          "type" : "object",
          "properties" : {
            "usagePlanId" : {
              "type" : "string",
              "description" : "Usage Plan Id"
            }
          }
        },
        "GatewayResponseTemplateDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "contentType" : {
              "type" : "string",
              "description" : "Content Type"
            },
            "mappingTemplate" : {
              "type" : "string",
              "description" : "Mapping Template"
            },
            "responseType" : {
              "type" : "string",
              "description" : "Response Type"
            }
          }
        },
        "GetProductsProductIdApisApiIdStagesStageIdCanaryExport200Response" : {
          "type" : "string"
        },
        "MethodBodyResponse" : {
          "type" : "object",
          "properties" : {
            "bodyDescription" : {
              "type" : "string",
              "description" : "Body Description"
            },
            "bodyName" : {
              "type" : "string",
              "description" : "Body Name"
            },
            "modelId" : {
              "type" : "string",
              "description" : "Model Id"
            },
            "modelName" : {
              "type" : "string",
              "description" : "Model Name"
            }
          }
        },
        "ApigwPage«MyProductDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/MyProductDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "UsagePlanSimpleDto" : {
          "type" : "object",
          "properties" : {
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request",
              "format" : "int64"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request",
              "format" : "int64"
            },
            "quotaCondition" : {
              "type" : "string",
              "description" : "Quota Condition"
            },
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps",
              "format" : "int32"
            }
          }
        },
        "GetStageDeploymentResponse" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/StageDeploymentDto"
              }
            },
            "defaultDeploymentNo" : {
              "type" : "integer",
              "description" : "Default Deployment No",
              "format" : "int64"
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ImportResourceResponse" : {
          "type" : "object",
          "properties" : {
            "errorMessages" : {
              "type" : "array",
              "description" : "Error Messages",
              "items" : {
                "type" : "string"
              }
            },
            "resourceList" : {
              "type" : "array",
              "description" : "Resource List",
              "items" : {
                "$ref" : "#/components/schemas/ResourceDto"
              }
            },
            "success" : {
              "type" : "boolean",
              "description" : "Success"
            },
            "warnMessages" : {
              "type" : "array",
              "description" : "Warn Messages",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "AddMethodResponse" : {
          "type" : "object",
          "properties" : {
            "methods" : {
              "type" : "array",
              "description" : "Methods",
              "items" : {
                "$ref" : "#/components/schemas/MethodResultDto"
              }
            }
          }
        },
        "ApiKeyRelateProductDto" : {
          "type" : "object",
          "properties" : {
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "productDescription" : {
              "type" : "string",
              "description" : "Product Description"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name"
            },
            "publisherId" : {
              "type" : "string",
              "description" : "Publisher Id"
            },
            "regTime" : {
              "type" : "string",
              "description" : "Reg Time",
              "format" : "date-time"
            },
            "status" : {
              "type" : "string",
              "description" : "Status<br>Allowable values: REQUEST, DENY, ACCEPTED, REJECTED, BLOCKED_REQUEST",
              "enum" : [ "REQUEST", "DENY", "ACCEPTED", "REJECTED", "BLOCKED_REQUEST" ]
            }
          }
        },
        "ApiKeySearchDto" : {
          "type" : "object",
          "properties" : {
            "apiKeyId" : {
              "type" : "string",
              "description" : "Api Key Id"
            },
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "primaryKey" : {
              "type" : "string",
              "description" : "Primary Key"
            },
            "regTime" : {
              "type" : "string",
              "description" : "Reg Time",
              "format" : "date-time"
            },
            "secondaryKey" : {
              "type" : "string",
              "description" : "Secondary Key"
            },
            "status" : {
              "type" : "string",
              "description" : "Status<br>Allowable values: REQUEST, DENY, ACCEPTED, REJECTED, BLOCKED_REQUEST",
              "enum" : [ "REQUEST", "DENY", "ACCEPTED", "REJECTED", "BLOCKED_REQUEST" ]
            }
          }
        },
        "StageMethodResponse" : {
          "type" : "object",
          "properties" : {
            "stageMethod" : {
              "$ref" : "#/components/schemas/StageMethodDto"
            }
          }
        },
        "GetDashboardsProductsProductIdApisApiIdStagesStageIdExport200Response" : {
          "type" : "string"
        },
        "MockEndPoint" : {
          "required" : [ "httpStatus" ],
          "type" : "object",
          "properties" : {
            "httpStatus" : {
              "type" : "integer",
              "description" : "Http Status<br>Min: 100<br>Max: 599",
              "format" : "int32"
            },
            "response" : {
              "type" : "string",
              "description" : "Response"
            },
            "headers" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Headers"
            }
          }
        },
        "ApiKeyDto" : {
          "type" : "object",
          "properties" : {
            "apiKeyDescription" : {
              "type" : "string",
              "description" : "Api Key Description"
            },
            "apiKeyId" : {
              "type" : "string",
              "description" : "Api Key Id"
            },
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "isEnabled" : {
              "type" : "boolean",
              "description" : "Is Enabled"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "primaryKey" : {
              "type" : "string",
              "description" : "Primary Key"
            },
            "secondaryKey" : {
              "type" : "string",
              "description" : "Secondary Key"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "GatewayResponseHeaderDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "headerName" : {
              "type" : "string",
              "description" : "Header Name"
            },
            "headerValue" : {
              "type" : "string",
              "description" : "Header Value"
            },
            "responseType" : {
              "type" : "string",
              "description" : "Response Type"
            }
          }
        },
        "GetStagesOfUsagePlanResponse" : {
          "type" : "object",
          "properties" : {
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/UsagePlanRelatedStageDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            },
            "usagePlan" : {
              "$ref" : "#/components/schemas/UsagePlanSimpleDto"
            }
          }
        },
        "ApigwPage«ApiDocumentWithStagesDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ApiDocumentWithStagesDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ResourceDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "corsAllowCredentials" : {
              "type" : "string",
              "description" : "Cors Allow Credentials"
            },
            "corsAllowHeaders" : {
              "type" : "string",
              "description" : "Cors Allow Headers"
            },
            "corsAllowMethods" : {
              "type" : "string",
              "description" : "Cors Allow Methods"
            },
            "corsAllowOrigin" : {
              "type" : "string",
              "description" : "Cors Allow Origin"
            },
            "corsExposeHeaders" : {
              "type" : "string",
              "description" : "Cors Expose Headers"
            },
            "corsMaxAge" : {
              "type" : "string",
              "description" : "Cors Max Age"
            },
            "methods" : {
              "type" : "array",
              "description" : "Methods",
              "items" : {
                "$ref" : "#/components/schemas/ResourceMethodDto"
              }
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            },
            "resourcePath" : {
              "type" : "string",
              "description" : "Resource Path"
            }
          }
        },
        "GetUsagePlansOfStageResponse" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/UsagePlanResponseDto"
              }
            },
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request",
              "format" : "int64"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request",
              "format" : "int64"
            },
            "quotaCondition" : {
              "type" : "string",
              "description" : "Quota Condition"
            },
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps",
              "format" : "int32"
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ApigwPage«ApiKeyRelationSearchDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ApiKeyRelationSearchDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "PatchMethodRequest" : {
          "required" : [ "authentication", "requiredApiKey", "validation" ],
          "type" : "object",
          "properties" : {
            "httpEndPoint" : {
              "$ref" : "#/components/schemas/HttpProxyEndPoint"
            },
            "mockEndPoint" : {
              "$ref" : "#/components/schemas/MockEndPoint"
            },
            "ncpEndPoint" : {
              "$ref" : "#/components/schemas/NcpEndPoint"
            },
            "methodDescription" : {
              "type" : "string",
              "description" : "Method Description<br>Length(Min/Max): 0/300"
            },
            "validation" : {
              "$ref" : "#/components/schemas/ValidationFilter"
            },
            "authentication" : {
              "$ref" : "#/components/schemas/AuthenticationFilter"
            },
            "requiredApiKey" : {
              "$ref" : "#/components/schemas/ApiKeyFilter"
            }
          }
        },
        "PostResponseHeaderRequest" : {
          "required" : [ "parameterName" ],
          "type" : "object",
          "properties" : {
            "parameterName" : {
              "type" : "string",
              "description" : "Parameter Name<br>Length(Min/Max): 0/100<br>Pattern: [\\w+\\-]*\\w"
            },
            "parameterDescription" : {
              "type" : "string",
              "description" : "Parameter Description<br>Length(Min/Max): 0/300"
            },
            "isArray" : {
              "type" : "boolean",
              "description" : "Is Array"
            },
            "parameterType" : {
              "type" : "string",
              "description" : "Parameter Type<br>Allowable values: string, file, boolean, long, float, double, integer",
              "enum" : [ "string", "file", "boolean", "long", "float", "double", "integer" ]
            }
          }
        },
        "StageTreeDto" : {
          "type" : "object",
          "properties" : {
            "canaryDeploymentNo" : {
              "type" : "integer",
              "description" : "Canary Deployment No",
              "format" : "int64"
            },
            "defaultDeploymentNo" : {
              "type" : "integer",
              "description" : "Default Deployment No",
              "format" : "int64"
            },
            "isCanary" : {
              "type" : "boolean",
              "description" : "Is Canary"
            },
            "resourceDtos" : {
              "type" : "array",
              "description" : "Resource Dtos",
              "items" : {
                "$ref" : "#/components/schemas/ResourceDto"
              }
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            }
          }
        },
        "SearchProductsResponse" : {
          "type" : "object",
          "properties" : {
            "initialCount" : {
              "type" : "integer",
              "description" : "Initial Count",
              "format" : "int64"
            },
            "productPage" : {
              "$ref" : "#/components/schemas/ApigwPage«ProductSearchDto»"
            }
          }
        },
        "PostProductRequest" : {
          "required" : [ "productName", "subscriptionCode" ],
          "type" : "object",
          "properties" : {
            "productName" : {
              "type" : "string",
              "description" : "Product Name<br>Length(Min/Max): 0/100"
            },
            "description" : {
              "type" : "string",
              "description" : "Description<br>Length(Min/Max): 0/300"
            },
            "subscriptionCode" : {
              "type" : "string",
              "description" : "Subscription Code<br>Allowable values: PROTECTED, PUBLIC",
              "enum" : [ "PROTECTED", "PUBLIC" ]
            }
          }
        },
        "SearchApiKeysWithProductRelationRequest" : {
          "required" : [ "productId" ],
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "offset" : {
              "type" : "integer",
              "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id<br>Length(Min/Max): 0/10"
            },
            "statusSet" : {
              "type" : "array",
              "description" : "Status Set<br>Allowable values: REQUEST, DENY, ACCEPTED, REJECTED, BLOCKED_REQUEST",
              "items" : {
                "type" : "string",
                "enum" : [ "REQUEST", "DENY", "ACCEPTED", "REJECTED", "BLOCKED_REQUEST" ]
              }
            },
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name<br>Length(Min/Max): 0/20"
            }
          }
        },
        "GetModelsResponse" : {
          "type" : "object",
          "properties" : {
            "productPage" : {
              "$ref" : "#/components/schemas/ApigwPage«ModelDto»"
            }
          }
        },
        "ProductSearchDto" : {
          "type" : "object",
          "properties" : {
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "productDescription" : {
              "type" : "string",
              "description" : "Product Description"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name"
            },
            "subscribed" : {
              "type" : "boolean",
              "description" : "Subscribed"
            },
            "subscriptionCode" : {
              "type" : "string",
              "description" : "Subscription Code<br>Allowable values: PROTECTED, PUBLIC",
              "enum" : [ "PROTECTED", "PUBLIC" ]
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "EventResponseDto" : {
          "type" : "object",
          "properties" : {
            "level" : {
              "type" : "string",
              "description" : "Level<br>Allowable values: EVENT, ALARM, ALERT",
              "enum" : [ "EVENT", "ALARM", "ALERT" ]
            },
            "message" : {
              "type" : "string",
              "description" : "Message"
            },
            "time" : {
              "type" : "string",
              "description" : "Time"
            },
            "type" : {
              "type" : "string",
              "description" : "Type<br>Allowable values: ES010, ES020, EU400, EU410, EU420",
              "enum" : [ "ES010", "ES020", "EU400", "EU410", "EU420" ]
            }
          }
        },
        "GetDashboardsApiKeysApiKeyIdProductsProductIdApisApiIdStagesStageIdExport200Response" : {
          "type" : "string"
        },
        "Data" : {
          "type" : "object",
          "properties" : {
            "time" : {
              "type" : "string",
              "description" : "Time"
            },
            "value" : {
              "type" : "number",
              "description" : "Value",
              "format" : "float"
            }
          }
        },
        "ResourceResponse" : {
          "type" : "object",
          "properties" : {
            "resource" : {
              "$ref" : "#/components/schemas/ResourceDto"
            }
          }
        },
        "AuthorizerTestResponseDto" : {
          "type" : "object",
          "properties" : {
            "response" : {
              "$ref" : "#/components/schemas/TestResponse"
            }
          }
        },
        "ProductNameIdDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name"
            }
          }
        },
        "SearchUsagePlanDetailRequest" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "offset" : {
              "type" : "integer",
              "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "usagePlanName" : {
              "type" : "string",
              "description" : "Usage Plan Name<br>Length(Min/Max): 0/20"
            }
          }
        },
        "PostApiRequest" : {
          "required" : [ "apiName" ],
          "type" : "object",
          "properties" : {
            "apiDescription" : {
              "type" : "string",
              "description" : "Api Description<br>Length(Min/Max): 0/300"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name<br>Length(Min/Max): 0/20<br>Pattern: [a-zA-Z0-9_-]+"
            }
          }
        },
        "MethodResponseResponse" : {
          "type" : "object",
          "properties" : {
            "methodResponseDto" : {
              "$ref" : "#/components/schemas/MethodResponseDto"
            }
          }
        },
        "AuthorizerRequest" : {
          "required" : [ "authorizerConfig", "authorizerName", "authorizerType" ],
          "type" : "object",
          "properties" : {
            "authorizerName" : {
              "type" : "string",
              "description" : "Authorizer Name<br>Length(Min/Max): 0/20<br>Pattern: [a-zA-Z0-9_-]+"
            },
            "authorizerDescription" : {
              "type" : "string",
              "description" : "Authorizer Description<br>Length(Min/Max): 0/300"
            },
            "authorizerType" : {
              "type" : "string",
              "description" : "Authorizer Type<br>Allowable values: CLOUD_FUNCTIONS",
              "enum" : [ "CLOUD_FUNCTIONS" ]
            },
            "authorizerConfig" : {
              "$ref" : "#/components/schemas/AuthorizerConfigDto"
            },
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec<br>Min: 1<br>Max: 3,600",
              "format" : "int32"
            }
          }
        },
        "ApigwPage«EventResponseDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/EventResponseDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "PatchMethodResponseRequest" : {
          "type" : "object",
          "properties" : {
            "responseDescription" : {
              "type" : "string",
              "description" : "Response Description<br>Length(Min/Max): 0/300"
            }
          }
        },
        "SearchProductDocumentResponse" : {
          "type" : "object",
          "properties" : {
            "apiPage" : {
              "$ref" : "#/components/schemas/ApigwPage«ApiDocumentWithStagesDto»"
            }
          }
        },
        "PostGatewayResponseTemplateRequest" : {
          "required" : [ "contentType", "mappingTemplate" ],
          "type" : "object",
          "properties" : {
            "contentType" : {
              "type" : "string",
              "description" : "Content Type<br>Length(Min/Max): 0/100<br>Pattern: [.a-z0-9_+/\\-*]+"
            },
            "mappingTemplate" : {
              "type" : "string",
              "description" : "Mapping Template<br>Length(Min/Max): 0/500"
            }
          }
        },
        "GetResponseHeaderListResponse" : {
          "type" : "object",
          "properties" : {
            "headers" : {
              "type" : "array",
              "description" : "Headers",
              "items" : {
                "$ref" : "#/components/schemas/MethodParameterDto"
              }
            }
          }
        },
        "ApiKeyRelationSearchDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiKeyId" : {
              "type" : "string",
              "description" : "Api Key Id"
            },
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "dailyUsage" : {
              "type" : "integer",
              "description" : "Daily Usage",
              "format" : "int64"
            },
            "dayCallCount" : {
              "type" : "integer",
              "description" : "Day Call Count",
              "format" : "int64"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "monthCallCount" : {
              "type" : "integer",
              "description" : "Month Call Count",
              "format" : "int64"
            },
            "monthlyUsage" : {
              "type" : "integer",
              "description" : "Monthly Usage",
              "format" : "int64"
            },
            "regTime" : {
              "type" : "string",
              "description" : "Reg Time",
              "format" : "date-time"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            },
            "usagePlanId" : {
              "type" : "string",
              "description" : "Usage Plan Id"
            },
            "usagePlanName" : {
              "type" : "string",
              "description" : "Usage Plan Name"
            }
          }
        },
        "ApigwPage«ApiNameIdDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ApiNameIdDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "SearchDisassociatedStageRequest" : {
          "required" : [ "usagePlanId" ],
          "type" : "object",
          "properties" : {
            "usagePlanId" : {
              "type" : "string",
              "description" : "Usage Plan Id<br>Length(Min/Max): 0/10"
            }
          }
        },
        "DashboardSeries" : {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "Data",
              "items" : {
                "$ref" : "#/components/schemas/Data"
              }
            },
            "name" : {
              "type" : "string",
              "description" : "Name"
            },
            "region" : {
              "type" : "string",
              "description" : "Region"
            }
          }
        },
        "ApiNameIdWithStageDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/StageNameIdAndDataDto"
              }
            }
          }
        },
        "UsagePlan" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "associatedStagesCount" : {
              "type" : "integer",
              "description" : "Associated Stages Count",
              "format" : "int64"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "usagePlanId" : {
              "type" : "string",
              "description" : "Usage Plan Id"
            },
            "usagePlanName" : {
              "type" : "string",
              "description" : "Usage Plan Name"
            }
          }
        },
        "GetApiIdsResponse" : {
          "type" : "object",
          "properties" : {
            "apis" : {
              "$ref" : "#/components/schemas/ApigwPage«ApiNameIdDto»"
            }
          }
        },
        "GatewayResponseDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "headers" : {
              "type" : "array",
              "description" : "Headers",
              "items" : {
                "$ref" : "#/components/schemas/GatewayResponseHeaderDto"
              }
            },
            "isDefault" : {
              "type" : "boolean",
              "description" : "Is Default"
            },
            "responseName" : {
              "type" : "string",
              "description" : "Response Name"
            },
            "responseType" : {
              "type" : "string",
              "description" : "Response Type"
            },
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "templates" : {
              "type" : "array",
              "description" : "Templates",
              "items" : {
                "$ref" : "#/components/schemas/GatewayResponseTemplateDto"
              }
            }
          }
        },
        "PatchStageMethodRequest" : {
          "required" : [ "isInherit" ],
          "type" : "object",
          "properties" : {
            "endpointDomain" : {
              "type" : "string",
              "description" : "Endpoint Domain<br>Length(Min/Max): 0/200<br>Pattern: ((http|https)://)(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|((http|https)://)([^@]+)@(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|NONE"
            },
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec<br>Min: 1<br>Max: 3,600",
              "format" : "int32"
            },
            "throttleRps" : {
              "type" : "integer",
              "description" : "Throttle Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "isInherit" : {
              "type" : "boolean",
              "description" : "Is Inherit"
            }
          }
        },
        "PostModelRequest" : {
          "required" : [ "modelName", "modelSchema" ],
          "type" : "object",
          "properties" : {
            "modelName" : {
              "type" : "string",
              "description" : "Model Name<br>Length(Min/Max): 0/100"
            },
            "modelDescription" : {
              "type" : "string",
              "description" : "Model Description<br>Length(Min/Max): 0/300"
            },
            "modelSchema" : {
              "type" : "string",
              "description" : "Model Schema<br>Length(Min/Max): 0/5,000<br>json string"
            }
          }
        },
        "StageInfo" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "isPublished" : {
              "type" : "boolean",
              "description" : "Is Published"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            }
          }
        },
        "GetProductIdsResponse" : {
          "type" : "object",
          "properties" : {
            "products" : {
              "type" : "array",
              "description" : "Products",
              "items" : {
                "$ref" : "#/components/schemas/ProductNameIdDto"
              }
            }
          }
        },
        "GetStageSimpleResponse" : {
          "type" : "object",
          "properties" : {
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/StageSimpleDto"
              }
            }
          }
        },
        "MethodParameterResponse" : {
          "type" : "object",
          "properties" : {
            "methodParameterDto" : {
              "$ref" : "#/components/schemas/MethodParameterDto"
            }
          }
        },
        "MethodResponse" : {
          "type" : "object",
          "properties" : {
            "method" : {
              "$ref" : "#/components/schemas/MethodResultDto"
            }
          }
        },
        "UsagePlanRelatedStageDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            }
          }
        },
        "AuthorizerDto" : {
          "type" : "object",
          "properties" : {
            "authorizerConfig" : {
              "$ref" : "#/components/schemas/AuthorizerConfigDto"
            },
            "authorizerDescription" : {
              "type" : "string",
              "description" : "Authorizer Description"
            },
            "authorizerId" : {
              "type" : "string",
              "description" : "Authorizer Id"
            },
            "authorizerName" : {
              "type" : "string",
              "description" : "Authorizer Name"
            },
            "authorizerType" : {
              "type" : "string",
              "description" : "Authorizer Type"
            },
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec",
              "format" : "int32"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "ApiOverViewDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "methodsCount" : {
              "type" : "integer",
              "description" : "Methods Count",
              "format" : "int64"
            },
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/StageWithDeploymentNoDto"
              }
            }
          }
        },
        "PatchApiKeyRequest" : {
          "required" : [ "keyType" ],
          "type" : "object",
          "properties" : {
            "keyType" : {
              "type" : "string",
              "description" : "Key Type<br>Allowable values: PRIMARY, SECONDARY",
              "enum" : [ "PRIMARY", "SECONDARY" ]
            }
          }
        },
        "PutProducesRequest" : {
          "type" : "object",
          "properties" : {
            "produces" : {
              "type" : "string",
              "description" : "Produces<br>Length(Min/Max): 0/100<br>Pattern: ([.a-z0-9_+/\\-*]+(,))*[.a-z0-9_+/\\-*]+"
            }
          }
        },
        "PostGatewayResponseHeaderRequest" : {
          "required" : [ "headerName", "headerValue" ],
          "type" : "object",
          "properties" : {
            "headerName" : {
              "type" : "string",
              "description" : "Header Name<br>Length(Min/Max): 0/45"
            },
            "headerValue" : {
              "type" : "string",
              "description" : "Header Value<br>Length(Min/Max): 0/130"
            }
          }
        },
        "PostUsagePlanRequest" : {
          "required" : [ "usagePlanName" ],
          "type" : "object",
          "properties" : {
            "usagePlanName" : {
              "type" : "string",
              "description" : "Usage Plan Name<br>Length(Min/Max): 0/20"
            },
            "usagePlanDescription" : {
              "type" : "string",
              "description" : "Usage Plan Description<br>Length(Min/Max): 0/50"
            },
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "quotaCondition" : {
              "type" : "string",
              "description" : "Quota Condition"
            }
          }
        },
        "GetProductOverviewResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeyCountInfo" : {
              "$ref" : "#/components/schemas/ApiKeyCountInfoDto"
            },
            "apis" : {
              "type" : "array",
              "description" : "Apis",
              "items" : {
                "$ref" : "#/components/schemas/ApiOverViewDto"
              }
            }
          }
        },
        "PatchCanaryTestRequest" : {
          "required" : [ "canaryEndpointDomain", "useDistributionRate" ],
          "type" : "object",
          "properties" : {
            "canaryEndpointDomain" : {
              "type" : "string",
              "description" : "Canary Endpoint Domain<br>Length(Min/Max): 0/200<br>Pattern: ((http|https)://)(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|((http|https)://)([^@]+)@(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|NONE"
            },
            "canaryCacheTtlSec" : {
              "type" : "integer",
              "description" : "Canary Cache Ttl Sec<br>Min: 1<br>Max: 3,600",
              "format" : "int32"
            },
            "canaryThrottleRps" : {
              "type" : "integer",
              "description" : "Canary Throttle Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "useDistributionRate" : {
              "type" : "boolean",
              "description" : "Use Distribution Rate"
            },
            "canaryDistributionRate" : {
              "type" : "number",
              "description" : "Canary Distribution Rate<br>Min: 0<br>Max: 100",
              "format" : "float"
            },
            "canaryConditions" : {
              "type" : "array",
              "description" : "Canary Conditions<br>collection item cannot be null",
              "items" : {
                "$ref" : "#/components/schemas/CanaryConditionDto"
              }
            }
          }
        },
        "StageNameIdAndDataDto" : {
          "type" : "object",
          "properties" : {
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "series" : {
              "type" : "array",
              "description" : "Series",
              "items" : {
                "$ref" : "#/components/schemas/DashboardSeries"
              }
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            }
          }
        },
        "GetAuthorizersResponseDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "authorizerDescription" : {
              "type" : "string",
              "description" : "Authorizer Description"
            },
            "authorizerId" : {
              "type" : "string",
              "description" : "Authorizer Id"
            },
            "authorizerName" : {
              "type" : "string",
              "description" : "Authorizer Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            }
          }
        },
        "TestResponse" : {
          "type" : "object",
          "properties" : {
            "body" : {
              "type" : "object",
              "properties" : { },
              "description" : "Body"
            },
            "latency" : {
              "type" : "string",
              "description" : "Latency"
            },
            "status" : {
              "type" : "integer",
              "description" : "Status",
              "format" : "int32"
            }
          }
        },
        "DocumentDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "documentMd" : {
              "type" : "string",
              "description" : "Document Md"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "PostImportApiRequest" : {
          "required" : [ "apiName", "swagger" ],
          "type" : "object",
          "properties" : {
            "apiDescription" : {
              "type" : "string",
              "description" : "Api Description<br>Length(Min/Max): 0/300"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name<br>Length(Min/Max): 0/20<br>Pattern: [a-zA-Z0-9_-]+"
            },
            "importValidateType" : {
              "type" : "string",
              "description" : "Import Validate Type<br>Allowable values: FAIL_ON_WARN, IGNORE_WARN",
              "enum" : [ "FAIL_ON_WARN", "IGNORE_WARN" ]
            },
            "swagger" : {
              "type" : "string",
              "description" : "Swagger"
            }
          }
        },
        "MethodBodyRequest" : {
          "required" : [ "bodyName", "modelId" ],
          "type" : "object",
          "properties" : {
            "modelId" : {
              "type" : "string",
              "description" : "Model Id<br>Length(Min/Max): 0/10"
            },
            "bodyName" : {
              "type" : "string",
              "description" : "Body Name<br>Length(Min/Max): 0/100<br>Pattern: [a-zA-Z0-9_-]+"
            },
            "bodyDescription" : {
              "type" : "string",
              "description" : "Body Description<br>Length(Min/Max): 0/300"
            }
          }
        },
        "PutApiKeyRelationRequest" : {
          "type" : "object",
          "properties" : {
            "usagePlanId" : {
              "type" : "string",
              "description" : "Usage Plan Id<br>Length(Min/Max): 0/10"
            }
          }
        },
        "GetDocumentResponse" : {
          "type" : "object",
          "properties" : {
            "documentJson" : {
              "type" : "string",
              "description" : "Document Json"
            }
          }
        },
        "MethodDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "authentication" : {
              "$ref" : "#/components/schemas/AuthenticationFilter"
            },
            "consumers" : {
              "type" : "string",
              "description" : "Consumers"
            },
            "endpointActionId" : {
              "type" : "string",
              "description" : "Endpoint Action Id"
            },
            "endpointCode" : {
              "type" : "string",
              "description" : "Endpoint Code"
            },
            "endpointConfigJson" : {
              "type" : "string",
              "description" : "Endpoint Config Json"
            },
            "httpEndPoint" : {
              "$ref" : "#/components/schemas/HttpProxyEndPoint"
            },
            "methodDescription" : {
              "type" : "string",
              "description" : "Method Description"
            },
            "methodFilters" : {
              "type" : "array",
              "description" : "Method Filters",
              "items" : {
                "$ref" : "#/components/schemas/MethodFilterDto"
              }
            },
            "methodName" : {
              "type" : "string",
              "description" : "Method Name<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            },
            "mockEndPoint" : {
              "$ref" : "#/components/schemas/MockEndPoint"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "ncpEndPoint" : {
              "$ref" : "#/components/schemas/NcpEndPoint"
            },
            "produces" : {
              "type" : "string",
              "description" : "Produces"
            },
            "requiredApiKey" : {
              "$ref" : "#/components/schemas/ApiKeyFilter"
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            },
            "resourcePath" : {
              "type" : "string",
              "description" : "Resource Path"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            },
            "useBodyWhenFormData" : {
              "type" : "boolean",
              "description" : "Use Body When Form Data"
            },
            "validation" : {
              "$ref" : "#/components/schemas/ValidationFilter"
            }
          }
        },
        "SetStatusCodeRequest" : {
          "type" : "object",
          "properties" : {
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            }
          }
        },
        "GetStagesResponse" : {
          "type" : "object",
          "properties" : {
            "host" : {
              "type" : "string",
              "description" : "Host"
            },
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/StageTreeDto"
              }
            }
          }
        },
        "PutStageRequest" : {
          "required" : [ "endpointDomain" ],
          "type" : "object",
          "properties" : {
            "endpointDomain" : {
              "type" : "string",
              "description" : "Endpoint Domain<br>Length(Min/Max): 0/200<br>Pattern: ((http|https)://)(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|((http|https)://)([^@]+)@(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|NONE"
            },
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec<br>Min: 1<br>Max: 3,600",
              "format" : "int32"
            },
            "throttleRps" : {
              "type" : "integer",
              "description" : "Throttle Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "ipAclCode" : {
              "type" : "string",
              "description" : "Ip Acl Code<br>Allowable values: ALLOWED, REJECTED",
              "enum" : [ "ALLOWED", "REJECTED" ]
            },
            "ipAclList" : {
              "type" : "string",
              "description" : "Ip Acl List<br>Length(Min/Max): 0/2,000<br>Pattern: ((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))?(\\n+|,|\\s+))*(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))?"
            },
            "isMaintenance" : {
              "type" : "boolean",
              "description" : "Is Maintenance"
            },
            "enabledContentEncoding" : {
              "type" : "boolean",
              "description" : "enabled ContentEncoding"
            },
            "minimumCompressionSize" : {
              "type" : "integer",
              "description" : "MinimumCompressionSize<br>Min: 0<br>Max: 10,485,760",
              "format" : "int32"
            },
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "response" : {
              "type" : "string",
              "description" : "Response<br>Length(Min/Max): 0/1,500"
            }
          }
        },
        "ApiNameIdDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            }
          }
        },
        "PostProductResponse" : {
          "type" : "object",
          "properties" : {
            "product" : {
              "$ref" : "#/components/schemas/ProductDto"
            }
          }
        },
        "PostMethodRequest" : {
          "required" : [ "authentication", "methodName", "requiredApiKey", "validation" ],
          "type" : "object",
          "properties" : {
            "methodName" : {
              "type" : "string",
              "description" : "Method Name<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            },
            "httpEndPoint" : {
              "$ref" : "#/components/schemas/HttpProxyEndPoint"
            },
            "mockEndPoint" : {
              "$ref" : "#/components/schemas/MockEndPoint"
            },
            "ncpEndPoint" : {
              "$ref" : "#/components/schemas/NcpEndPoint"
            },
            "validation" : {
              "$ref" : "#/components/schemas/ValidationFilter"
            },
            "authentication" : {
              "$ref" : "#/components/schemas/AuthenticationFilter"
            },
            "requiredApiKey" : {
              "$ref" : "#/components/schemas/ApiKeyFilter"
            },
            "methodDescription" : {
              "type" : "string",
              "description" : "Method Description<br>Length(Min/Max): 0/300"
            }
          }
        },
        "PostStageRequest" : {
          "required" : [ "endpointDomain", "stageName" ],
          "type" : "object",
          "properties" : {
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name<br>Length(Min/Max): 0/20<br>Pattern: [a-zA-Z0-9_-]+"
            },
            "endpointDomain" : {
              "type" : "string",
              "description" : "Endpoint Domain<br>Length(Min/Max): 0/200<br>Pattern: ((http|https)://)(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|((http|https)://)([^@]+)@(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|NONE"
            },
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec<br>Min: 1<br>Max: 3,600",
              "format" : "int32"
            },
            "throttleRps" : {
              "type" : "integer",
              "description" : "Throttle Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "ipAclCode" : {
              "type" : "string",
              "description" : "Ip Acl Code<br>Allowable values: ALLOWED, REJECTED",
              "enum" : [ "ALLOWED", "REJECTED" ]
            },
            "ipAclList" : {
              "type" : "string",
              "description" : "Ip Acl List<br>Length(Min/Max): 0/2,000<br>Pattern: ((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))?(\\n+|,|\\s+))*(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))?"
            },
            "deploymentDescription" : {
              "type" : "string",
              "description" : "Deployment Description<br>Length(Min/Max): 0/300"
            },
            "isMaintenance" : {
              "type" : "boolean",
              "description" : "Is Maintenance"
            },
            "enabledContentEncoding" : {
              "type" : "boolean",
              "description" : "enabled ContentEncoding"
            },
            "minimumCompressionSize" : {
              "type" : "integer",
              "description" : "MinimumCompressionSize<br>Min: 0<br>Max: 10,485,760",
              "format" : "int32"
            },
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "response" : {
              "type" : "string",
              "description" : "Response<br>Length(Min/Max): 0/1,500"
            }
          }
        },
        "EventHistoryRequest" : {
          "required" : [ "from", "timeZone", "to" ],
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "offset" : {
              "type" : "integer",
              "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "type" : {
              "type" : "array",
              "description" : "Type<br>collection item cannot be null<br>Allowable values: ES010, ES020, EU400, EU410, EU420",
              "items" : {
                "type" : "string",
                "enum" : [ "ES010", "ES020", "EU400", "EU410", "EU420" ]
              }
            },
            "level" : {
              "type" : "array",
              "description" : "Level<br>collection item cannot be null<br>Allowable values: EVENT, ALARM, ALERT",
              "items" : {
                "type" : "string",
                "enum" : [ "EVENT", "ALARM", "ALERT" ]
              }
            },
            "from" : {
              "type" : "string",
              "description" : "From<br>Pattern: yyyy-MM-dd"
            },
            "to" : {
              "type" : "string",
              "description" : "To<br>Pattern: yyyy-MM-dd"
            },
            "timeZone" : {
              "type" : "string",
              "description" : "Time Zone<br>Pattern: +09:00"
            }
          }
        },
        "PatchResourceRequest" : {
          "type" : "object",
          "properties" : {
            "corsAllowOrigin" : {
              "type" : "string",
              "description" : "Cors Allow Origin<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsAllowMethods" : {
              "type" : "string",
              "description" : "Cors Allow Methods<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsAllowHeaders" : {
              "type" : "string",
              "description" : "Cors Allow Headers<br>Length(Min/Max): 0/200<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsAllowCredentials" : {
              "type" : "string",
              "description" : "Cors Allow Credentials<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsMaxAge" : {
              "type" : "string",
              "description" : "Cors Max Age<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsExposeHeaders" : {
              "type" : "string",
              "description" : "Cors Expose Headers<br>Length(Min/Max): 0/200<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            }
          }
        },
        "PutStageUsageSettingRequest" : {
          "type" : "object",
          "properties" : {
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "quotaCondition" : {
              "type" : "string",
              "description" : "Quota Condition"
            }
          }
        },
        "PutConsumersRequest" : {
          "type" : "object",
          "properties" : {
            "consumers" : {
              "type" : "string",
              "description" : "Consumers<br>Length(Min/Max): 0/100<br>Pattern: ([.a-z0-9_+/\\-*]+(,))*[.a-z0-9_+/\\-*]+"
            }
          }
        },
        "MethodParameterDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "isArray" : {
              "type" : "boolean",
              "description" : "Is Array"
            },
            "isLogged" : {
              "type" : "boolean",
              "description" : "Is Logged"
            },
            "isRequired" : {
              "type" : "boolean",
              "description" : "Is Required"
            },
            "methodCode" : {
              "type" : "string",
              "description" : "Method Code"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "parameterCode" : {
              "type" : "string",
              "description" : "Parameter Code<br>Allowable values: REQUEST_HEADER, REQUEST_QUERY, REQUEST_FORMDATA, RESPONSE_HEADER",
              "enum" : [ "REQUEST_HEADER", "REQUEST_QUERY", "REQUEST_FORMDATA", "RESPONSE_HEADER" ]
            },
            "parameterDescription" : {
              "type" : "string",
              "description" : "Parameter Description"
            },
            "parameterName" : {
              "type" : "string",
              "description" : "Parameter Name"
            },
            "parameterNo" : {
              "type" : "integer",
              "description" : "Parameter No",
              "format" : "int64"
            },
            "parameterType" : {
              "type" : "string",
              "description" : "Parameter Type<br>Allowable values: string, file, boolean, long, float, double, integer",
              "enum" : [ "string", "file", "boolean", "long", "float", "double", "integer" ]
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            },
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "PostApiKeyRequest" : {
          "required" : [ "apiKeyName" ],
          "type" : "object",
          "properties" : {
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name<br>Length(Min/Max): 0/20"
            },
            "apiKeyDescription" : {
              "type" : "string",
              "description" : "Api Key Description<br>Length(Min/Max): 0/50"
            }
          }
        },
        "DeleteMethodParameterRequest" : {
          "required" : [ "parameterName" ],
          "type" : "object",
          "properties" : {
            "parameterName" : {
              "type" : "string",
              "description" : "Parameter Name<br>Length(Min/Max): 0/100<br>Pattern: [a-zA-Z0-9_+-.]+"
            }
          }
        },
        "GetApiKeyIdsResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeyIds" : {
              "type" : "array",
              "description" : "Api Key Ids",
              "items" : {
                "$ref" : "#/components/schemas/ApiKeyNameIdDto"
              }
            }
          }
        },
        "GetApiResponse" : {
          "type" : "object",
          "properties" : {
            "apis" : {
              "type" : "array",
              "description" : "Apis",
              "items" : {
                "$ref" : "#/components/schemas/ApiDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "PatchSubscriptionRequest" : {
          "required" : [ "status" ],
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string",
              "description" : "Status<br>Allowable values: ACCEPTED, REJECTED",
              "enum" : [ "ACCEPTED", "REJECTED" ]
            }
          }
        },
        "ApiKeyCountInfoDto" : {
          "type" : "object",
          "properties" : {
            "accepted" : {
              "type" : "integer",
              "description" : "Accepted",
              "format" : "int64"
            },
            "denied" : {
              "type" : "integer",
              "description" : "Denied",
              "format" : "int64"
            },
            "rejected" : {
              "type" : "integer",
              "description" : "Rejected",
              "format" : "int64"
            },
            "request" : {
              "type" : "integer",
              "description" : "Request",
              "format" : "int64"
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ProductDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "invokeId" : {
              "type" : "string",
              "description" : "Invoke Id"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "isPublished" : {
              "type" : "boolean",
              "description" : "Is Published"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "productDescription" : {
              "type" : "string",
              "description" : "Product Description"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name"
            },
            "subscriptionCode" : {
              "type" : "string",
              "description" : "Subscription Code<br>Allowable values: PROTECTED, PUBLIC",
              "enum" : [ "PROTECTED", "PUBLIC" ]
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "ModelDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "modelDescription" : {
              "type" : "string",
              "description" : "Model Description"
            },
            "modelId" : {
              "type" : "string",
              "description" : "Model Id"
            },
            "modelName" : {
              "type" : "string",
              "description" : "Model Name"
            },
            "modelSchema" : {
              "type" : "string",
              "description" : "Model Schema"
            }
          }
        },
        "ApiKeyFilter" : {
          "required" : [ "required" ],
          "type" : "object",
          "properties" : {
            "required" : {
              "type" : "boolean",
              "description" : "Required"
            }
          }
        },
        "PostDeployApiRequest" : {
          "required" : [ "stageId" ],
          "type" : "object",
          "properties" : {
            "deploymentDescription" : {
              "type" : "string",
              "description" : "Deployment Description<br>Length(Min/Max): 0/300"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id<br>Length(Min/Max): 0/10"
            }
          }
        },
        "PostMethodResponseRequest" : {
          "required" : [ "statusCode" ],
          "type" : "object",
          "properties" : {
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "responseDescription" : {
              "type" : "string",
              "description" : "Response Description<br>Length(Min/Max): 0/300"
            }
          }
        },
        "PostUnSubscribeRequest" : {
          "required" : [ "productId" ],
          "type" : "object",
          "properties" : {
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            }
          }
        },
        "ApigwPage«ModelDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ModelDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "Stage" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec",
              "format" : "int32"
            },
            "canaryCacheTtlSec" : {
              "type" : "integer",
              "description" : "Canary Cache Ttl Sec",
              "format" : "int32"
            },
            "canaryConditions" : {
              "type" : "array",
              "description" : "Canary Conditions",
              "items" : {
                "$ref" : "#/components/schemas/CanaryConditionDto"
              }
            },
            "canaryDeployedTime" : {
              "type" : "string",
              "description" : "Canary Deployed Time",
              "format" : "date-time"
            },
            "canaryDeploymentDescription" : {
              "type" : "string",
              "description" : "Canary Deployment Description"
            },
            "canaryDeploymentNo" : {
              "type" : "integer",
              "description" : "Canary Deployment No",
              "format" : "int64"
            },
            "canaryDistributionRate" : {
              "type" : "number",
              "description" : "Canary Distribution Rate",
              "format" : "float"
            },
            "canaryEndpointDomain" : {
              "type" : "string",
              "description" : "Canary Endpoint Domain"
            },
            "canaryThrottleRps" : {
              "type" : "integer",
              "description" : "Canary Throttle Rps",
              "format" : "int32"
            },
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request",
              "format" : "int64"
            },
            "deployedStageDeploymentNo" : {
              "type" : "integer",
              "description" : "Deployed Stage Deployment No",
              "format" : "int64"
            },
            "endpointDomain" : {
              "type" : "string",
              "description" : "Endpoint Domain"
            },
            "ipAclCode" : {
              "type" : "string",
              "description" : "Ip Acl Code<br>Allowable values: ALLOWED, REJECTED",
              "enum" : [ "ALLOWED", "REJECTED" ]
            },
            "ipAclList" : {
              "type" : "string",
              "description" : "Ip Acl List"
            },
            "isMaintenance" : {
              "type" : "boolean",
              "description" : "Is Maintenance"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request",
              "format" : "int64"
            },
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps",
              "format" : "int32"
            },
            "regTime" : {
              "type" : "string",
              "description" : "Reg Time",
              "format" : "date-time"
            },
            "response" : {
              "type" : "string",
              "description" : "Response"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            },
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            },
            "throttleRps" : {
              "type" : "integer",
              "description" : "Throttle Rps",
              "format" : "int32"
            },
            "useDistributionRate" : {
              "type" : "boolean",
              "description" : "Use Distribution Rate"
            },
            "enabledContentEncoding" : {
              "type" : "boolean",
              "description" : "Use Content Encoding"
            },
            "minimumCompressionSize" : {
              "type" : "integer",
              "description" : "Minimum Compression Size",
              "format" : "int32"
            }
          }
        },
        "TestAuthorizerRequest" : {
          "type" : "object",
          "properties" : {
            "params" : {
              "type" : "object",
              "properties" : { },
              "description" : "Params"
            }
          }
        },
        "PostMethodParameterRequest" : {
          "required" : [ "parameterCode", "parameterName" ],
          "type" : "object",
          "properties" : {
            "parameterName" : {
              "type" : "string",
              "description" : "Parameter Name<br>Length(Min/Max): 0/100<br>Pattern: [a-zA-Z0-9_+-.]+"
            },
            "parameterDescription" : {
              "type" : "string",
              "description" : "Parameter Description<br>Length(Min/Max): 0/300"
            },
            "isRequired" : {
              "type" : "boolean",
              "description" : "Is Required"
            },
            "isArray" : {
              "type" : "boolean",
              "description" : "Is Array"
            },
            "isLogged" : {
              "type" : "boolean",
              "description" : "Is Logged"
            },
            "parameterCode" : {
              "type" : "string",
              "description" : "Parameter Code<br>Allowable values: REQUEST_HEADER, REQUEST_QUERY, REQUEST_FORMDATA, RESPONSE_HEADER",
              "enum" : [ "REQUEST_HEADER", "REQUEST_QUERY", "REQUEST_FORMDATA", "RESPONSE_HEADER" ]
            },
            "parameterType" : {
              "type" : "string",
              "description" : "Parameter Type<br>Allowable values: string, file, boolean, long, float, double, integer",
              "enum" : [ "string", "file", "boolean", "long", "float", "double", "integer" ]
            }
          }
        },
        "AuthorizerConfigDto" : {
          "required" : [ "functionId", "region" ],
          "type" : "object",
          "properties" : {
            "region" : {
              "type" : "string",
              "description" : "Region"
            },
            "functionId" : {
              "type" : "string",
              "description" : "Function Id"
            },
            "payload" : {
              "type" : "array",
              "description" : "Payload",
              "items" : {
                "$ref" : "#/components/schemas/AuthorizerPayloadDto"
              }
            }
          }
        },
        "GetApiKeysResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeys" : {
              "type" : "array",
              "description" : "Api Keys",
              "items" : {
                "$ref" : "#/components/schemas/ApiKeyDto"
              }
            },
            "initialCount" : {
              "type" : "integer",
              "description" : "Initial Count",
              "format" : "int64"
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "StageResponse" : {
          "type" : "object",
          "properties" : {
            "stage" : {
              "$ref" : "#/components/schemas/Stage"
            }
          }
        },
        "SearchApiKeysWithProductRelationResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeys" : {
              "type" : "array",
              "description" : "Api Keys",
              "items" : {
                "$ref" : "#/components/schemas/ApiKeyProductRelationDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ApiDocumentWithStagesDto" : {
          "type" : "object",
          "properties" : {
            "apiDescription" : {
              "type" : "string",
              "description" : "Api Description"
            },
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/StageWithDeploymentNoDto"
              }
            }
          }
        },
        "PutUsagePlanRequest" : {
          "required" : [ "usagePlanName" ],
          "type" : "object",
          "properties" : {
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "quotaCondition" : {
              "type" : "string",
              "description" : "Quota Condition"
            },
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps<br>Min: 1<br>Max: 2,147,483,647",
              "format" : "int32"
            },
            "usagePlanDescription" : {
              "type" : "string",
              "description" : "Usage Plan Description<br>Length(Min/Max): 0/50"
            },
            "usagePlanName" : {
              "type" : "string",
              "description" : "Usage Plan Name<br>Length(Min/Max): 0/20"
            }
          }
        },
        "HttpProxyEndPoint" : {
          "required" : [ "method", "stream", "url" ],
          "type" : "object",
          "properties" : {
            "stream" : {
              "type" : "boolean",
              "description" : "Stream"
            },
            "method" : {
              "type" : "string",
              "description" : "Method<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            },
            "url" : {
              "type" : "string",
              "description" : "Url<br>Length(Min/Max): 0/1,500<br>Pattern: ^/[^+]*$"
            }
          }
        },
        "PostResourceRequest" : {
          "required" : [ "resourcePath" ],
          "type" : "object",
          "properties" : {
            "corsAllowCredentials" : {
              "type" : "string",
              "description" : "Cors Allow Credentials<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsAllowHeaders" : {
              "type" : "string",
              "description" : "Cors Allow Headers<br>Length(Min/Max): 0/200<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsAllowMethods" : {
              "type" : "string",
              "description" : "Cors Allow Methods<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsAllowOrigin" : {
              "type" : "string",
              "description" : "Cors Allow Origin<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsExposeHeaders" : {
              "type" : "string",
              "description" : "Cors Expose Headers<br>Length(Min/Max): 0/200<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "corsMaxAge" : {
              "type" : "string",
              "description" : "Cors Max Age<br>Length(Min/Max): 0/45<br>Pattern: ^$|\\S|^\\S|\\S$|^\\S.*\\S$"
            },
            "resourcePath" : {
              "type" : "string",
              "description" : "Resource Path<br>Length(Min/Max): 0/2,000<br>Pattern: /|(/([\\w+\\-]*\\w|\\{[\\w+\\-]*\\w+((})|(\\+}))))+"
            }
          }
        },
        "PutModelRequest" : {
          "required" : [ "modelSchema" ],
          "type" : "object",
          "properties" : {
            "modelDescription" : {
              "type" : "string",
              "description" : "Model Description<br>Length(Min/Max): 0/300"
            },
            "modelSchema" : {
              "type" : "string",
              "description" : "Model Schema<br>Length(Min/Max): 0/5,000<br>json string"
            }
          }
        },
        "ApiKeyProductRelationDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "apiKeyDescription" : {
              "type" : "string",
              "description" : "Api Key Description"
            },
            "apiKeyId" : {
              "type" : "string",
              "description" : "Api Key Id"
            },
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "status" : {
              "type" : "string",
              "description" : "Status<br>Allowable values: REQUEST, DENY, ACCEPTED, REJECTED, BLOCKED_REQUEST",
              "enum" : [ "REQUEST", "DENY", "ACCEPTED", "REJECTED", "BLOCKED_REQUEST" ]
            }
          }
        },
        "ApigwPage«ApiKeySearchDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ApiKeySearchDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ApigwPage«ProductSearchDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ProductSearchDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "EventResponse" : {
          "type" : "object",
          "properties" : {
            "events" : {
              "$ref" : "#/components/schemas/ApigwPage«EventResponseDto»"
            }
          }
        },
        "AuthorizerPayloadDto" : {
          "required" : [ "in", "name" ],
          "type" : "object",
          "properties" : {
            "in" : {
              "type" : "string",
              "description" : "In<br>Allowable values: HEADER, QUERY",
              "enum" : [ "HEADER", "QUERY" ]
            },
            "name" : {
              "type" : "string",
              "description" : "Name<br>Length(Min/Max): 0/20<br>Pattern: [a-zA-Z0-9_]+"
            }
          }
        },
        "UsagePlanResponse" : {
          "type" : "object",
          "properties" : {
            "usagePlan" : {
              "$ref" : "#/components/schemas/UsagePlanResponseDto"
            }
          }
        },
        "AuthenticationFilter" : {
          "required" : [ "platform" ],
          "type" : "object",
          "properties" : {
            "platform" : {
              "type" : "string",
              "description" : "Platform<br>Allowable values: NONE, IAM, AUTHORIZER",
              "enum" : [ "NONE", "IAM", "AUTHORIZER" ]
            },
            "authorizerId" : {
              "type" : "string",
              "description" : "Authorizer Id"
            }
          }
        },
        "ConsumersResponse" : {
          "type" : "object",
          "properties" : {
            "consumers" : {
              "type" : "string",
              "description" : "Consumers"
            }
          }
        },
        "GetProductsProductIdApisApiIdStagesStageIdExport200Response" : {
          "type" : "string"
        },
        "MethodResponseDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "methodCode" : {
              "type" : "string",
              "description" : "Method Code"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            },
            "responseDescription" : {
              "type" : "string",
              "description" : "Response Description"
            },
            "statusCode" : {
              "type" : "integer",
              "description" : "Status Code",
              "format" : "int32"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "ApiKeyNameIdDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "apiKeyId" : {
              "type" : "string",
              "description" : "Api Key Id"
            },
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "isEnabled" : {
              "type" : "boolean",
              "description" : "Is Enabled"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            }
          }
        },
        "PostDeployStageRequest" : {
          "required" : [ "deploymentNo" ],
          "type" : "object",
          "properties" : {
            "deploymentNo" : {
              "type" : "integer",
              "description" : "Deployment No<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            }
          }
        },
        "StageMethodsResponse" : {
          "type" : "object",
          "properties" : {
            "stageMethods" : {
              "type" : "array",
              "description" : "Stage Methods",
              "items" : {
                "$ref" : "#/components/schemas/StageMethodDto"
              }
            }
          }
        },
        "GetMethodResponses" : {
          "type" : "object",
          "properties" : {
            "responses" : {
              "type" : "array",
              "description" : "Responses",
              "items" : {
                "$ref" : "#/components/schemas/MethodResponseDto"
              }
            }
          }
        },
        "MethodFilterDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "configJson" : {
              "type" : "string",
              "description" : "Config Json"
            },
            "filterName" : {
              "type" : "string",
              "description" : "Filter Name<br>Allowable values: AUTH, VALID, API_KEY",
              "enum" : [ "AUTH", "VALID", "API_KEY" ]
            },
            "methodCode" : {
              "type" : "string",
              "description" : "Method Code"
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            }
          }
        },
        "PostCloneApiRequest" : {
          "required" : [ "apiName", "originApiId" ],
          "type" : "object",
          "properties" : {
            "apiDescription" : {
              "type" : "string",
              "description" : "Api Description<br>Length(Min/Max): 0/300"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name<br>Length(Min/Max): 0/20<br>Pattern: [a-zA-Z0-9_-]+"
            },
            "originApiId" : {
              "type" : "string",
              "description" : "Origin Api Id<br>Length(Min/Max): 0/10"
            }
          }
        },
        "CanaryConditionDto" : {
          "required" : [ "parameterCode", "parameterName", "parameterValue" ],
          "type" : "object",
          "properties" : {
            "parameterCode" : {
              "type" : "string",
              "description" : "Parameter Code<br>Allowable values: REQUEST_HEADER, REQUEST_QUERY",
              "enum" : [ "REQUEST_HEADER", "REQUEST_QUERY" ]
            },
            "parameterName" : {
              "type" : "string",
              "description" : "Parameter Name"
            },
            "parameterValue" : {
              "type" : "string",
              "description" : "Parameter Value"
            }
          }
        },
        "ApiKeyResponse" : {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "$ref" : "#/components/schemas/ApiKeyDto"
            }
          }
        },
        "GetRequestParameterListResponse" : {
          "type" : "object",
          "properties" : {
            "formDatas" : {
              "type" : "array",
              "description" : "Form Datas",
              "items" : {
                "$ref" : "#/components/schemas/MethodParameterDto"
              }
            },
            "headers" : {
              "type" : "array",
              "description" : "Headers",
              "items" : {
                "$ref" : "#/components/schemas/MethodParameterDto"
              }
            },
            "isNcpTenant" : {
              "type" : "boolean",
              "description" : "Is Ncp Tenant"
            },
            "queryStrings" : {
              "type" : "array",
              "description" : "Query Strings",
              "items" : {
                "$ref" : "#/components/schemas/MethodParameterDto"
              }
            },
            "useBodyWhenFormData" : {
              "type" : "boolean",
              "description" : "Use Body When Form Data"
            }
          }
        },
        "UsagePlanResponseDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "associatedStagesCount" : {
              "type" : "integer",
              "description" : "Associated Stages Count",
              "format" : "int64"
            },
            "dayQuotaRequest" : {
              "type" : "integer",
              "description" : "Day Quota Request",
              "format" : "int64"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "monthQuotaRequest" : {
              "type" : "integer",
              "description" : "Month Quota Request",
              "format" : "int64"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "quotaCondition" : {
              "type" : "string",
              "description" : "Quota Condition"
            },
            "rateRps" : {
              "type" : "integer",
              "description" : "Rate Rps",
              "format" : "int32"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            },
            "usagePlanDescription" : {
              "type" : "string",
              "description" : "Usage Plan Description"
            },
            "usagePlanId" : {
              "type" : "string",
              "description" : "Usage Plan Id"
            },
            "usagePlanName" : {
              "type" : "string",
              "description" : "Usage Plan Name"
            }
          }
        },
        "PatchApiRequest" : {
          "required" : [ "apiDescription" ],
          "type" : "object",
          "properties" : {
            "apiDescription" : {
              "type" : "string",
              "description" : "Api Description<br>Length(Min/Max): 0/300"
            }
          }
        },
        "ProducesResponse" : {
          "type" : "object",
          "properties" : {
            "produces" : {
              "type" : "string",
              "description" : "Produces"
            }
          }
        },
        "ApigwPage«ApiNameIdWithStageDto»" : {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "array",
              "description" : "Content",
              "items" : {
                "$ref" : "#/components/schemas/ApiNameIdWithStageDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "PutApiKeyRequest" : {
          "required" : [ "apiKeyName", "isEnabled" ],
          "type" : "object",
          "properties" : {
            "apiKeyName" : {
              "type" : "string",
              "description" : "Api Key Name<br>Length(Min/Max): 0/20"
            },
            "apiKeyDescription" : {
              "type" : "string",
              "description" : "Api Key Description<br>Length(Min/Max): 0/50"
            },
            "isEnabled" : {
              "type" : "boolean",
              "description" : "Is Enabled"
            }
          }
        },
        "PostPublishApiRequest" : {
          "required" : [ "stages" ],
          "type" : "object",
          "properties" : {
            "stages" : {
              "type" : "array",
              "description" : "Stages<br>collection item cannot be null",
              "items" : {
                "$ref" : "#/components/schemas/Stage"
              }
            }
          }
        },
        "GetResourcesResponse" : {
          "type" : "object",
          "properties" : {
            "resourceList" : {
              "type" : "array",
              "description" : "Resource List",
              "items" : {
                "$ref" : "#/components/schemas/ResourceDto"
              }
            }
          }
        },
        "PatchProductRequest" : {
          "required" : [ "productName", "subscriptionCode" ],
          "type" : "object",
          "properties" : {
            "productName" : {
              "type" : "string",
              "description" : "Product Name<br>Length(Min/Max): 0/100"
            },
            "description" : {
              "type" : "string",
              "description" : "Description<br>Length(Min/Max): 0/300"
            },
            "subscriptionCode" : {
              "type" : "string",
              "description" : "Subscription Code<br>Allowable values: PROTECTED, PUBLIC",
              "enum" : [ "PROTECTED", "PUBLIC" ]
            }
          }
        },
        "ApiResponse" : {
          "type" : "object",
          "properties" : {
            "api" : {
              "$ref" : "#/components/schemas/ApiDto"
            }
          }
        },
        "ImportApiResponse" : {
          "type" : "object",
          "properties" : {
            "api" : {
              "$ref" : "#/components/schemas/ApiDto"
            },
            "errorMessages" : {
              "type" : "array",
              "description" : "Error Messages",
              "items" : {
                "type" : "string"
              }
            },
            "success" : {
              "type" : "boolean",
              "description" : "Success"
            },
            "warnMessages" : {
              "type" : "array",
              "description" : "Warn Messages",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "StageSimpleDto" : {
          "type" : "object",
          "properties" : {
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            }
          }
        },
        "SearchApiKeyRelationsResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeyRelations" : {
              "$ref" : "#/components/schemas/ApigwPage«ApiKeyRelationSearchDto»"
            }
          }
        },
        "SearchApiKeysRequest" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "offset" : {
              "type" : "integer",
              "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "statusSet" : {
              "type" : "array",
              "description" : "Status Set<br>Allowable values: REQUEST, DENY, ACCEPTED, REJECTED, BLOCKED_REQUEST",
              "items" : {
                "type" : "string",
                "enum" : [ "REQUEST", "DENY", "ACCEPTED", "REJECTED", "BLOCKED_REQUEST" ]
              }
            },
            "apiKeyValue" : {
              "type" : "string",
              "description" : "Api Key Value"
            },
            "apiKeyId" : {
              "type" : "string",
              "description" : "Api Key Id"
            }
          }
        },
        "MyProductDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "hasDeployedStage" : {
              "type" : "boolean",
              "description" : "Has Deployed Stage"
            },
            "invokeId" : {
              "type" : "string",
              "description" : "Invoke Id"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "isPublished" : {
              "type" : "boolean",
              "description" : "Is Published"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "productDescription" : {
              "type" : "string",
              "description" : "Product Description"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name"
            },
            "subscriptionCode" : {
              "type" : "string",
              "description" : "Subscription Code<br>Allowable values: PROTECTED, PUBLIC",
              "enum" : [ "PROTECTED", "PUBLIC" ]
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "StageDeploymentDto" : {
          "type" : "object",
          "properties" : {
            "deployedTime" : {
              "type" : "string",
              "description" : "Deployed Time",
              "format" : "date-time"
            },
            "deploymentDescription" : {
              "type" : "string",
              "description" : "Deployment Description"
            },
            "documentJson" : {
              "type" : "string",
              "description" : "Document Json"
            },
            "stageDeploymentNo" : {
              "type" : "integer",
              "description" : "Stage Deployment No",
              "format" : "int64"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            }
          }
        },
        "GetUsagePlanDetailsResponse" : {
          "type" : "object",
          "properties" : {
            "initialCount" : {
              "type" : "integer",
              "description" : "Initial Count",
              "format" : "int64"
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            },
            "usagePlans" : {
              "type" : "array",
              "description" : "Usage Plans",
              "items" : {
                "$ref" : "#/components/schemas/UsagePlanResponseDto"
              }
            }
          }
        },
        "ApiDto" : {
          "type" : "object",
          "properties" : {
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "apiDescription" : {
              "type" : "string",
              "description" : "Api Description"
            },
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "apiName" : {
              "type" : "string",
              "description" : "Api Name"
            },
            "disabled" : {
              "type" : "boolean",
              "description" : "Disabled"
            },
            "domainCode" : {
              "type" : "string",
              "description" : "Domain Code"
            },
            "isDeleted" : {
              "type" : "boolean",
              "description" : "Is Deleted"
            },
            "modTime" : {
              "type" : "string",
              "description" : "Mod Time",
              "format" : "date-time"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "permission" : {
              "type" : "string",
              "description" : "Permission"
            },
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            },
            "stages" : {
              "type" : "array",
              "description" : "Stages",
              "items" : {
                "$ref" : "#/components/schemas/StageInfo"
              }
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            }
          }
        },
        "PreviewModelRequest" : {
          "required" : [ "modelSchema" ],
          "type" : "object",
          "properties" : {
            "modelId" : {
              "type" : "string",
              "description" : "Model Id<br>Length(Min/Max): 0/10"
            },
            "modelSchema" : {
              "type" : "string",
              "description" : "Model Schema<br>Length(Min/Max): 0/5,000<br>json string"
            }
          }
        },
        "ResourceMethodDto" : {
          "type" : "object",
          "properties" : {
            "methodCode" : {
              "type" : "string",
              "description" : "Method Code"
            },
            "methodName" : {
              "type" : "string",
              "description" : "Method Name<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            }
          }
        },
        "PostImportResourcesRequest" : {
          "required" : [ "swagger" ],
          "type" : "object",
          "properties" : {
            "importValidateType" : {
              "type" : "string",
              "description" : "Import Validate Type<br>Allowable values: FAIL_ON_WARN, IGNORE_WARN",
              "enum" : [ "FAIL_ON_WARN", "IGNORE_WARN" ]
            },
            "swagger" : {
              "type" : "string",
              "description" : "Swagger"
            }
          }
        },
        "SearchApiKeysResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeyPage" : {
              "$ref" : "#/components/schemas/ApigwPage«ApiKeySearchDto»"
            }
          }
        },
        "SearchProductsRequest" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "description" : "Limit<br>Min: 1<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "offset" : {
              "type" : "integer",
              "description" : "Offset<br>Min: 0<br>Max: 9,223,372,036,854,775,807",
              "format" : "int64"
            },
            "productName" : {
              "type" : "string",
              "description" : "Product Name<br>Length(Min/Max): 0/100"
            },
            "publisherId" : {
              "type" : "string",
              "description" : "Publisher Id<br>Length(Min/Max): 0/10"
            },
            "subscribed" : {
              "type" : "boolean",
              "description" : "Subscribed"
            },
            "productType" : {
              "type" : "array",
              "description" : "Product Type<br>Allowable values: MY, NCP, OTHERS",
              "items" : {
                "type" : "string",
                "enum" : [ "MY", "NCP", "OTHERS" ]
              }
            }
          }
        },
        "ModelPreviewResponse" : {
          "type" : "object",
          "properties" : {
            "modelSchema" : {
              "type" : "object",
              "properties" : { },
              "description" : "Model Schema"
            }
          }
        },
        "GetProductsResponse" : {
          "type" : "object",
          "properties" : {
            "initialCount" : {
              "type" : "integer",
              "description" : "Initial Count",
              "format" : "int64"
            },
            "productPage" : {
              "$ref" : "#/components/schemas/ApigwPage«MyProductDto»"
            }
          }
        },
        "GetGatewayResponsesResponse" : {
          "type" : "object",
          "properties" : {
            "gatewayResponses" : {
              "type" : "array",
              "description" : "Gateway Responses",
              "items" : {
                "$ref" : "#/components/schemas/GatewayResponseDto"
              }
            }
          }
        },
        "PostSubscriptionRequest" : {
          "required" : [ "productId" ],
          "type" : "object",
          "properties" : {
            "productId" : {
              "type" : "string",
              "description" : "Product Id"
            }
          }
        },
        "GetApiKeyRelateProductResponse" : {
          "type" : "object",
          "properties" : {
            "apiKeyRelateProductDtos" : {
              "type" : "array",
              "description" : "Api Key Relate Product Dtos",
              "items" : {
                "$ref" : "#/components/schemas/ApiKeyRelateProductDto"
              }
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "GetAuthorizersResponse" : {
          "type" : "object",
          "properties" : {
            "authorizers" : {
              "type" : "array",
              "description" : "Authorizers",
              "items" : {
                "$ref" : "#/components/schemas/GetAuthorizersResponseDto"
              }
            },
            "initialCount" : {
              "type" : "integer",
              "description" : "Initial Count",
              "format" : "int64"
            },
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            }
          }
        },
        "ValidationFilter" : {
          "required" : [ "type" ],
          "type" : "object",
          "properties" : {
            "type" : {
              "type" : "string",
              "description" : "Type<br>Allowable values: NONE, QUERYSTRING_HEADERS",
              "enum" : [ "NONE", "QUERYSTRING_HEADERS" ]
            },
            "queryStrings" : {
              "type" : "array",
              "description" : "Query Strings",
              "items" : {
                "type" : "string"
              }
            },
            "headers" : {
              "type" : "array",
              "description" : "Headers",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "PostDocumentRequest" : {
          "required" : [ "documentMd" ],
          "type" : "object",
          "properties" : {
            "documentMd" : {
              "type" : "string",
              "description" : "Document Md<br>Length(Min/Max): 0/65,535"
            }
          }
        },
        "GetMethodsResponse" : {
          "type" : "object",
          "properties" : {
            "methods" : {
              "type" : "array",
              "description" : "Methods",
              "items" : {
                "$ref" : "#/components/schemas/MethodDto"
              }
            }
          }
        },
        "StageWithDeploymentNoDto" : {
          "type" : "object",
          "properties" : {
            "deployedStageDeploymentNo" : {
              "type" : "integer",
              "description" : "Deployed Stage Deployment No",
              "format" : "int64"
            },
            "host" : {
              "type" : "string",
              "description" : "Host"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "stageName" : {
              "type" : "string",
              "description" : "Stage Name"
            }
          }
        },
        "GetUsagePlansResponse" : {
          "type" : "object",
          "properties" : {
            "total" : {
              "type" : "integer",
              "description" : "Total",
              "format" : "int64"
            },
            "usagePlans" : {
              "type" : "array",
              "description" : "Usage Plans",
              "items" : {
                "$ref" : "#/components/schemas/UsagePlan"
              }
            }
          }
        },
        "GetApiStagesResponse" : {
          "type" : "object",
          "properties" : {
            "apis" : {
              "$ref" : "#/components/schemas/ApigwPage«ApiNameIdWithStageDto»"
            }
          }
        },
        "CanaryTestDto" : {
          "type" : "object",
          "properties" : {
            "canaryCacheTtlSec" : {
              "type" : "integer",
              "description" : "Canary Cache Ttl Sec",
              "format" : "int32"
            },
            "canaryConditions" : {
              "type" : "array",
              "description" : "Canary Conditions",
              "items" : {
                "$ref" : "#/components/schemas/CanaryConditionDto"
              }
            },
            "canaryDeployedTime" : {
              "type" : "string",
              "description" : "Canary Deployed Time",
              "format" : "date-time"
            },
            "canaryDeploymentDescription" : {
              "type" : "string",
              "description" : "Canary Deployment Description"
            },
            "canaryDeploymentNo" : {
              "type" : "integer",
              "description" : "Canary Deployment No",
              "format" : "int64"
            },
            "canaryDistributionRate" : {
              "type" : "number",
              "description" : "Canary Distribution Rate",
              "format" : "float"
            },
            "canaryEndpointDomain" : {
              "type" : "string",
              "description" : "Canary Endpoint Domain"
            },
            "canaryThrottleRps" : {
              "type" : "integer",
              "description" : "Canary Throttle Rps",
              "format" : "int32"
            },
            "deployedStageDeploymentNo" : {
              "type" : "integer",
              "description" : "Deployed Stage Deployment No",
              "format" : "int64"
            },
            "stageId" : {
              "type" : "string",
              "description" : "Stage Id"
            },
            "useDistributionRate" : {
              "type" : "boolean",
              "description" : "Use Distribution Rate"
            }
          }
        },
        "StageMethodDto" : {
          "type" : "object",
          "properties" : {
            "cacheTtlSec" : {
              "type" : "integer",
              "description" : "Cache Ttl Sec",
              "format" : "int32"
            },
            "endpointActionId" : {
              "type" : "string",
              "description" : "Endpoint Action Id"
            },
            "endpointCode" : {
              "type" : "string",
              "description" : "Endpoint Code"
            },
            "endpointConfigJson" : {
              "type" : "string",
              "description" : "Endpoint Config Json"
            },
            "endpointDomain" : {
              "type" : "string",
              "description" : "Endpoint Domain"
            },
            "invokeUrl" : {
              "type" : "string",
              "description" : "Invoke Url"
            },
            "isInherit" : {
              "type" : "boolean",
              "description" : "Is Inherit"
            },
            "methodCode" : {
              "type" : "string",
              "description" : "Method Code"
            },
            "methodName" : {
              "type" : "string",
              "description" : "Method Name<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            },
            "resourcePath" : {
              "type" : "string",
              "description" : "Resource Path"
            },
            "restUrl" : {
              "type" : "string",
              "description" : "Rest Url"
            },
            "stageDeploymentNo" : {
              "type" : "integer",
              "description" : "Stage Deployment No",
              "format" : "int64"
            },
            "throttleRps" : {
              "type" : "integer",
              "description" : "Throttle Rps",
              "format" : "int32"
            }
          }
        },
        "NcpEndPoint" : {
          "required" : [ "actionId", "actionName", "region", "service", "stream", "url" ],
          "type" : "object",
          "properties" : {
            "service" : {
              "type" : "string",
              "description" : "Service"
            },
            "region" : {
              "type" : "string",
              "description" : "Region<br>Allowable values: KR, JPN, USWN, DEN, SGN, HK",
              "enum" : [ "KR", "JPN", "USWN", "DEN", "SGN", "HK" ]
            },
            "actionId" : {
              "type" : "string",
              "description" : "Action Id"
            },
            "actionName" : {
              "type" : "string",
              "description" : "Action Name"
            },
            "stream" : {
              "type" : "boolean",
              "description" : "Stream"
            },
            "method" : {
              "type" : "string",
              "description" : "Method<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            },
            "url" : {
              "type" : "string",
              "description" : "Url<br>Length(Min/Max): 0/1,500<br>Pattern: ((http|https)://)(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?|((http|https)://)([^@]+)@(([\\w.-]+\\.[a-zA-Z0-9]+)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(:([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5]))?(/[a-zA-Z0-9&%_./-~-]*)?"
            }
          }
        },
        "MethodResultDto" : {
          "type" : "object",
          "properties" : {
            "apiId" : {
              "type" : "string",
              "description" : "Api Id"
            },
            "authentication" : {
              "$ref" : "#/components/schemas/AuthenticationFilter"
            },
            "consumers" : {
              "type" : "string",
              "description" : "Consumers"
            },
            "httpEndPoint" : {
              "$ref" : "#/components/schemas/HttpProxyEndPoint"
            },
            "methodDescription" : {
              "type" : "string",
              "description" : "Method Description"
            },
            "methodName" : {
              "type" : "string",
              "description" : "Method Name<br>Allowable values: ANY, GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD",
              "enum" : [ "ANY", "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD" ]
            },
            "mockEndPoint" : {
              "$ref" : "#/components/schemas/MockEndPoint"
            },
            "modifier" : {
              "type" : "string",
              "description" : "Modifier"
            },
            "ncpEndPoint" : {
              "$ref" : "#/components/schemas/NcpEndPoint"
            },
            "produces" : {
              "type" : "string",
              "description" : "Produces"
            },
            "requiredApiKey" : {
              "$ref" : "#/components/schemas/ApiKeyFilter"
            },
            "resourceId" : {
              "type" : "string",
              "description" : "Resource Id"
            },
            "resourcePath" : {
              "type" : "string",
              "description" : "Resource Path"
            },
            "tenantId" : {
              "type" : "string",
              "description" : "Tenant Id"
            },
            "useBodyWhenFormData" : {
              "type" : "boolean",
              "description" : "Use Body When Form Data"
            },
            "validation" : {
              "$ref" : "#/components/schemas/ValidationFilter"
            }
          }
        }
      },
      "securitySchemes" : {
        "x-ncp-iam" : {
          "type" : "apiKey",
          "name" : "x-ncp-iam",
          "in" : "header",
          "x-ncp-apigw-auth-ver" : "v2"
        }
      }
    },
    "x-original-swagger-version" : "2.0"
  }